<?xml version="1.0" encoding="ASCII"?>
<jbc:Project xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jbc="https://modbeam.bitbucket.io/jbc">
  <classes name="com/thealgorithms/maths/code/Area" public="true" minorVersion="0" majorVersion="63" super="true" sourceFileName="Area.java">
    <methods name="&lt;init>" public="true" firstInstruction="//@classes.0/@methods.0/@instructions.0">
      <instructions xsi:type="jbc:AloadInstruction" name="idx_0" linenumber="6" localVariable="//@classes.0/@methods.0/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.0/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_1" linenumber="6">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.0/@instructions.2"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/Object;"/>
          <descriptor>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:ReturnInstruction" name="idx_2" linenumber="6"/>
      <descriptor>
        <resultType typeDescriptor="V"/>
      </descriptor>
      <localVariableTable name="this" startInstruction="//@classes.0/@methods.0/@instructions.0" endInstruction="//@classes.0/@methods.0/@instructions.2" index="0">
        <descriptor typeDescriptor="Lcom/thealgorithms/maths/code/Area;"/>
      </localVariableTable>
    </methods>
    <methods name="surfaceAreaCube" public="true" firstInstruction="//@classes.0/@methods.1/@instructions.0" static="true">
      <instructions xsi:type="jbc:DloadInstruction" name="idx_0" linenumber="31" localVariable="//@classes.0/@methods.1/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_1" linenumber="31">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.2"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_2" linenumber="31">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.3"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_3" linenumber="31">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.1/@instructions.9" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.1/@instructions.4"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_4" linenumber="32">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.5"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_5" linenumber="32">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.6"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_6" linenumber="32" constant="Must be a positive sideLength">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.7"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_7" linenumber="32">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.8"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_8" linenumber="32">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.1/@instructions.9"/>
      </instructions>
      <instructions xsi:type="jbc:LdcDoubleInstruction" name="idx_9" linenumber="34" constant="6.0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.10"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_10" linenumber="34" localVariable="//@classes.0/@methods.1/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.11"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_11" linenumber="34">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.12"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_12" linenumber="34" localVariable="//@classes.0/@methods.1/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.13"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_13" linenumber="34">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.14"/>
      </instructions>
      <instructions xsi:type="jbc:DreturnInstruction" name="idx_14" linenumber="34"/>
      <descriptor>
        <parameterTypes typeDescriptor="D"/>
        <resultType typeDescriptor="D"/>
      </descriptor>
      <localVariableTable name="sideLength" startInstruction="//@classes.0/@methods.1/@instructions.0" endInstruction="//@classes.0/@methods.1/@instructions.14" index="0">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
    </methods>
    <methods name="surfaceAreaSphere" public="true" firstInstruction="//@classes.0/@methods.2/@instructions.0" static="true">
      <instructions xsi:type="jbc:DloadInstruction" name="idx_0" linenumber="44" localVariable="//@classes.0/@methods.2/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_1" linenumber="44">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.2"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_2" linenumber="44">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.3"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_3" linenumber="44">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.2/@instructions.9" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.2/@instructions.4"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_4" linenumber="45">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.5"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_5" linenumber="45">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.6"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_6" linenumber="45" constant="Must be a positive radius">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.7"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_7" linenumber="45">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.8"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_8" linenumber="45">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.2/@instructions.9"/>
      </instructions>
      <instructions xsi:type="jbc:LdcDoubleInstruction" name="idx_9" linenumber="47" constant="12.566370614359172">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.10"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_10" linenumber="47" localVariable="//@classes.0/@methods.2/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.11"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_11" linenumber="47">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.12"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_12" linenumber="47" localVariable="//@classes.0/@methods.2/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.13"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_13" linenumber="47">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.14"/>
      </instructions>
      <instructions xsi:type="jbc:DreturnInstruction" name="idx_14" linenumber="47"/>
      <descriptor>
        <parameterTypes typeDescriptor="D"/>
        <resultType typeDescriptor="D"/>
      </descriptor>
      <localVariableTable name="radius" startInstruction="//@classes.0/@methods.2/@instructions.0" endInstruction="//@classes.0/@methods.2/@instructions.14" index="0">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
    </methods>
    <methods name="surfaceAreaRectangle" public="true" firstInstruction="//@classes.0/@methods.3/@instructions.0" static="true">
      <instructions xsi:type="jbc:DloadInstruction" name="idx_0" linenumber="58" localVariable="//@classes.0/@methods.3/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.3/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_1" linenumber="58">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.3/@instructions.2"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_2" linenumber="58">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.3/@instructions.3"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_3" linenumber="58">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.3/@instructions.9" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.3/@instructions.4"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_4" linenumber="59">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.3/@instructions.5"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_5" linenumber="59">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.3/@instructions.6"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_6" linenumber="59" constant="Must be a positive length">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.3/@instructions.7"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_7" linenumber="59">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.3/@instructions.8"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_8" linenumber="59">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.3/@instructions.9"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_9" linenumber="61" localVariable="//@classes.0/@methods.3/@localVariableTable.1" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.3/@instructions.10"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_10" linenumber="61">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.3/@instructions.11"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_11" linenumber="61">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.3/@instructions.12"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_12" linenumber="61">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.3/@instructions.18" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.3/@instructions.13"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_13" linenumber="62">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.3/@instructions.14"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_14" linenumber="62">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.3/@instructions.15"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_15" linenumber="62" constant="Must be a positive width">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.3/@instructions.16"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_16" linenumber="62">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.3/@instructions.17"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_17" linenumber="62">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.3/@instructions.18"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_18" linenumber="64" localVariable="//@classes.0/@methods.3/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.3/@instructions.19"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_19" linenumber="64" localVariable="//@classes.0/@methods.3/@localVariableTable.1" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.3/@instructions.20"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_20" linenumber="64">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.3/@instructions.21"/>
      </instructions>
      <instructions xsi:type="jbc:DreturnInstruction" name="idx_21" linenumber="64"/>
      <descriptor>
        <parameterTypes typeDescriptor="D"/>
        <parameterTypes typeDescriptor="D"/>
        <resultType typeDescriptor="D"/>
      </descriptor>
      <localVariableTable name="length" startInstruction="//@classes.0/@methods.3/@instructions.0" endInstruction="//@classes.0/@methods.3/@instructions.21" index="0">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
      <localVariableTable name="width" startInstruction="//@classes.0/@methods.3/@instructions.0" endInstruction="//@classes.0/@methods.3/@instructions.21" index="2">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
    </methods>
    <methods name="surfaceAreaCylinder" public="true" firstInstruction="//@classes.0/@methods.4/@instructions.0" static="true">
      <instructions xsi:type="jbc:DloadInstruction" name="idx_0" linenumber="75" localVariable="//@classes.0/@methods.4/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_1" linenumber="75">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.2"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_2" linenumber="75">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.3"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_3" linenumber="75">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.4/@instructions.9" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.4/@instructions.4"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_4" linenumber="76">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.5"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_5" linenumber="76">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.6"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_6" linenumber="76" constant="Must be a positive radius">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.7"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_7" linenumber="76">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.8"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_8" linenumber="76">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.4/@instructions.9"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_9" linenumber="78" localVariable="//@classes.0/@methods.4/@localVariableTable.1" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.10"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_10" linenumber="78">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.11"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_11" linenumber="78">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.12"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_12" linenumber="78">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.4/@instructions.18" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.4/@instructions.13"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_13" linenumber="79">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.14"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_14" linenumber="79">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.15"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_15" linenumber="79" constant="Must be a positive radius">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.16"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_16" linenumber="79">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.17"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_17" linenumber="79">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.4/@instructions.18"/>
      </instructions>
      <instructions xsi:type="jbc:LdcDoubleInstruction" name="idx_18" linenumber="81" constant="2.0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.19"/>
      </instructions>
      <instructions xsi:type="jbc:LdcDoubleInstruction" name="idx_19" linenumber="81" constant="3.141592653589793">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.20"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_20" linenumber="81" localVariable="//@classes.0/@methods.4/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.21"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_21" linenumber="81">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.22"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_22" linenumber="81" localVariable="//@classes.0/@methods.4/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.23"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_23" linenumber="81">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.24"/>
      </instructions>
      <instructions xsi:type="jbc:LdcDoubleInstruction" name="idx_24" linenumber="81" constant="3.141592653589793">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.25"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_25" linenumber="81" localVariable="//@classes.0/@methods.4/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.26"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_26" linenumber="81">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.27"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_27" linenumber="81" localVariable="//@classes.0/@methods.4/@localVariableTable.1" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.28"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_28" linenumber="81">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.29"/>
      </instructions>
      <instructions xsi:type="jbc:DaddInstruction" name="idx_29" linenumber="81">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.30"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_30" linenumber="81">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.4/@instructions.31"/>
      </instructions>
      <instructions xsi:type="jbc:DreturnInstruction" name="idx_31" linenumber="81"/>
      <descriptor>
        <parameterTypes typeDescriptor="D"/>
        <parameterTypes typeDescriptor="D"/>
        <resultType typeDescriptor="D"/>
      </descriptor>
      <localVariableTable name="radius" startInstruction="//@classes.0/@methods.4/@instructions.0" endInstruction="//@classes.0/@methods.4/@instructions.31" index="0">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
      <localVariableTable name="height" startInstruction="//@classes.0/@methods.4/@instructions.0" endInstruction="//@classes.0/@methods.4/@instructions.31" index="2">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
    </methods>
    <methods name="surfaceAreaSquare" public="true" firstInstruction="//@classes.0/@methods.5/@instructions.0" static="true">
      <instructions xsi:type="jbc:DloadInstruction" name="idx_0" linenumber="91" localVariable="//@classes.0/@methods.5/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.5/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_1" linenumber="91">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.5/@instructions.2"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_2" linenumber="91">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.5/@instructions.3"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_3" linenumber="91">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.5/@instructions.9" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.5/@instructions.4"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_4" linenumber="92">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.5/@instructions.5"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_5" linenumber="92">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.5/@instructions.6"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_6" linenumber="92" constant="Must be a positive sideLength">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.5/@instructions.7"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_7" linenumber="92">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.5/@instructions.8"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_8" linenumber="92">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.5/@instructions.9"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_9" linenumber="94" localVariable="//@classes.0/@methods.5/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.5/@instructions.10"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_10" linenumber="94" localVariable="//@classes.0/@methods.5/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.5/@instructions.11"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_11" linenumber="94">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.5/@instructions.12"/>
      </instructions>
      <instructions xsi:type="jbc:DreturnInstruction" name="idx_12" linenumber="94"/>
      <descriptor>
        <parameterTypes typeDescriptor="D"/>
        <resultType typeDescriptor="D"/>
      </descriptor>
      <localVariableTable name="sideLength" startInstruction="//@classes.0/@methods.5/@instructions.0" endInstruction="//@classes.0/@methods.5/@instructions.12" index="0">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
    </methods>
    <methods name="surfaceAreaTriangleRectangle" public="true" firstInstruction="//@classes.0/@methods.6/@instructions.0" static="true">
      <instructions xsi:type="jbc:DloadInstruction" name="idx_0" linenumber="105" localVariable="//@classes.0/@methods.6/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_1" linenumber="105">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.2"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_2" linenumber="105">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.3"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_3" linenumber="105">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.6/@instructions.9" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.6/@instructions.4"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_4" linenumber="106">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.5"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_5" linenumber="106">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.6"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_6" linenumber="106" constant="Must be a positive base">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.7"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_7" linenumber="106">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.8"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_8" linenumber="106">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.6/@instructions.9"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_9" linenumber="108" localVariable="//@classes.0/@methods.6/@localVariableTable.1" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.10"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_10" linenumber="108">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.11"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_11" linenumber="108">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.12"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_12" linenumber="108">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.6/@instructions.18" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.6/@instructions.13"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_13" linenumber="109">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.14"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_14" linenumber="109">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.15"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_15" linenumber="109" constant="Must be a positive height">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.16"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_16" linenumber="109">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.17"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_17" linenumber="109">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.6/@instructions.18"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_18" linenumber="111" localVariable="//@classes.0/@methods.6/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.19"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_19" linenumber="111" localVariable="//@classes.0/@methods.6/@localVariableTable.1" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.20"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_20" linenumber="111">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.21"/>
      </instructions>
      <instructions xsi:type="jbc:LdcDoubleInstruction" name="idx_21" linenumber="111" constant="2.0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.22"/>
      </instructions>
      <instructions xsi:type="jbc:DdivInstruction" name="idx_22" linenumber="111">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.6/@instructions.23"/>
      </instructions>
      <instructions xsi:type="jbc:DreturnInstruction" name="idx_23" linenumber="111"/>
      <descriptor>
        <parameterTypes typeDescriptor="D"/>
        <parameterTypes typeDescriptor="D"/>
        <resultType typeDescriptor="D"/>
      </descriptor>
      <localVariableTable name="base" startInstruction="//@classes.0/@methods.6/@instructions.0" endInstruction="//@classes.0/@methods.6/@instructions.23" index="0">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
      <localVariableTable name="height" startInstruction="//@classes.0/@methods.6/@instructions.0" endInstruction="//@classes.0/@methods.6/@instructions.23" index="2">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
    </methods>
    <methods name="surfaceAreaParallelogram" public="true" firstInstruction="//@classes.0/@methods.7/@instructions.0" static="true">
      <instructions xsi:type="jbc:DloadInstruction" name="idx_0" linenumber="122" localVariable="//@classes.0/@methods.7/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.7/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_1" linenumber="122">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.7/@instructions.2"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_2" linenumber="122">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.7/@instructions.3"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_3" linenumber="122">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.7/@instructions.9" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.7/@instructions.4"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_4" linenumber="123">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.7/@instructions.5"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_5" linenumber="123">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.7/@instructions.6"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_6" linenumber="123" constant="Must be a positive base">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.7/@instructions.7"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_7" linenumber="123">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.7/@instructions.8"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_8" linenumber="123">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.7/@instructions.9"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_9" linenumber="125" localVariable="//@classes.0/@methods.7/@localVariableTable.1" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.7/@instructions.10"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_10" linenumber="125">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.7/@instructions.11"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_11" linenumber="125">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.7/@instructions.12"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_12" linenumber="125">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.7/@instructions.18" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.7/@instructions.13"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_13" linenumber="126">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.7/@instructions.14"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_14" linenumber="126">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.7/@instructions.15"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_15" linenumber="126" constant="Must be a positive height">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.7/@instructions.16"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_16" linenumber="126">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.7/@instructions.17"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_17" linenumber="126">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.7/@instructions.18"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_18" linenumber="128" localVariable="//@classes.0/@methods.7/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.7/@instructions.19"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_19" linenumber="128" localVariable="//@classes.0/@methods.7/@localVariableTable.1" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.7/@instructions.20"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_20" linenumber="128">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.7/@instructions.21"/>
      </instructions>
      <instructions xsi:type="jbc:DreturnInstruction" name="idx_21" linenumber="128"/>
      <descriptor>
        <parameterTypes typeDescriptor="D"/>
        <parameterTypes typeDescriptor="D"/>
        <resultType typeDescriptor="D"/>
      </descriptor>
      <localVariableTable name="base" startInstruction="//@classes.0/@methods.7/@instructions.0" endInstruction="//@classes.0/@methods.7/@instructions.21" index="0">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
      <localVariableTable name="height" startInstruction="//@classes.0/@methods.7/@instructions.0" endInstruction="//@classes.0/@methods.7/@instructions.21" index="2">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
    </methods>
    <methods name="surfaceAreaTrapezium" public="true" firstInstruction="//@classes.0/@methods.8/@instructions.0" static="true">
      <instructions xsi:type="jbc:DloadInstruction" name="idx_0" linenumber="140" localVariable="//@classes.0/@methods.8/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_1" linenumber="140">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.2"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_2" linenumber="140">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.3"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_3" linenumber="140">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.8/@instructions.9" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.8/@instructions.4"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_4" linenumber="141">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.5"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_5" linenumber="141">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.6"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_6" linenumber="141" constant="Must be a positive base1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.7"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_7" linenumber="141">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.8"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_8" linenumber="141">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.8/@instructions.9"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_9" linenumber="143" localVariable="//@classes.0/@methods.8/@localVariableTable.1" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.10"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_10" linenumber="143">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.11"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_11" linenumber="143">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.12"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_12" linenumber="143">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.8/@instructions.18" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.8/@instructions.13"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_13" linenumber="144">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.14"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_14" linenumber="144">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.15"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_15" linenumber="144" constant="Must be a positive base2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.16"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_16" linenumber="144">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.17"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_17" linenumber="144">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.8/@instructions.18"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_18" linenumber="146" localVariable="//@classes.0/@methods.8/@localVariableTable.2" varIndex="4">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.19"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_19" linenumber="146">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.20"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_20" linenumber="146">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.21"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_21" linenumber="146">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.8/@instructions.27" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.8/@instructions.22"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_22" linenumber="147">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.23"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_23" linenumber="147">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.24"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_24" linenumber="147" constant="Must be a positive height">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.25"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_25" linenumber="147">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.26"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_26" linenumber="147">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.8/@instructions.27"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_27" linenumber="149" localVariable="//@classes.0/@methods.8/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.28"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_28" linenumber="149" localVariable="//@classes.0/@methods.8/@localVariableTable.1" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.29"/>
      </instructions>
      <instructions xsi:type="jbc:DaddInstruction" name="idx_29" linenumber="149">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.30"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_30" linenumber="149" localVariable="//@classes.0/@methods.8/@localVariableTable.2" varIndex="4">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.31"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_31" linenumber="149">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.32"/>
      </instructions>
      <instructions xsi:type="jbc:LdcDoubleInstruction" name="idx_32" linenumber="149" constant="2.0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.33"/>
      </instructions>
      <instructions xsi:type="jbc:DdivInstruction" name="idx_33" linenumber="149">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.8/@instructions.34"/>
      </instructions>
      <instructions xsi:type="jbc:DreturnInstruction" name="idx_34" linenumber="149"/>
      <descriptor>
        <parameterTypes typeDescriptor="D"/>
        <parameterTypes typeDescriptor="D"/>
        <parameterTypes typeDescriptor="D"/>
        <resultType typeDescriptor="D"/>
      </descriptor>
      <localVariableTable name="base1" startInstruction="//@classes.0/@methods.8/@instructions.0" endInstruction="//@classes.0/@methods.8/@instructions.34" index="0">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
      <localVariableTable name="base2" startInstruction="//@classes.0/@methods.8/@instructions.0" endInstruction="//@classes.0/@methods.8/@instructions.34" index="2">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
      <localVariableTable name="height" startInstruction="//@classes.0/@methods.8/@instructions.0" endInstruction="//@classes.0/@methods.8/@instructions.34" index="4">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
    </methods>
    <methods name="surfaceAreaCircle" public="true" firstInstruction="//@classes.0/@methods.9/@instructions.0" static="true">
      <instructions xsi:type="jbc:DloadInstruction" name="idx_0" linenumber="159" localVariable="//@classes.0/@methods.9/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.9/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_1" linenumber="159">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.9/@instructions.2"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_2" linenumber="159">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.9/@instructions.3"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_3" linenumber="159">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.9/@instructions.9" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.9/@instructions.4"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_4" linenumber="160">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.9/@instructions.5"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_5" linenumber="160">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.9/@instructions.6"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_6" linenumber="160" constant="Must be a positive radius">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.9/@instructions.7"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_7" linenumber="160">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.9/@instructions.8"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_8" linenumber="160">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.9/@instructions.9"/>
      </instructions>
      <instructions xsi:type="jbc:LdcDoubleInstruction" name="idx_9" linenumber="162" constant="3.141592653589793">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.9/@instructions.10"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_10" linenumber="162" localVariable="//@classes.0/@methods.9/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.9/@instructions.11"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_11" linenumber="162">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.9/@instructions.12"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_12" linenumber="162" localVariable="//@classes.0/@methods.9/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.9/@instructions.13"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_13" linenumber="162">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.9/@instructions.14"/>
      </instructions>
      <instructions xsi:type="jbc:DreturnInstruction" name="idx_14" linenumber="162"/>
      <descriptor>
        <parameterTypes typeDescriptor="D"/>
        <resultType typeDescriptor="D"/>
      </descriptor>
      <localVariableTable name="radius" startInstruction="//@classes.0/@methods.9/@instructions.0" endInstruction="//@classes.0/@methods.9/@instructions.14" index="0">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
    </methods>
    <methods name="surfaceAreaHemisphere" public="true" firstInstruction="//@classes.0/@methods.10/@instructions.0" static="true">
      <instructions xsi:type="jbc:DloadInstruction" name="idx_0" linenumber="172" localVariable="//@classes.0/@methods.10/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.10/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_1" linenumber="172">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.10/@instructions.2"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_2" linenumber="172">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.10/@instructions.3"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_3" linenumber="172">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.10/@instructions.9" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.10/@instructions.4"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_4" linenumber="173">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.10/@instructions.5"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_5" linenumber="173">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.10/@instructions.6"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_6" linenumber="173" constant="Must be a positive radius">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.10/@instructions.7"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_7" linenumber="173">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.10/@instructions.8"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_8" linenumber="173">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.10/@instructions.9"/>
      </instructions>
      <instructions xsi:type="jbc:LdcDoubleInstruction" name="idx_9" linenumber="175" constant="9.42477796076938">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.10/@instructions.10"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_10" linenumber="175" localVariable="//@classes.0/@methods.10/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.10/@instructions.11"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_11" linenumber="175">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.10/@instructions.12"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_12" linenumber="175" localVariable="//@classes.0/@methods.10/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.10/@instructions.13"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_13" linenumber="175">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.10/@instructions.14"/>
      </instructions>
      <instructions xsi:type="jbc:DreturnInstruction" name="idx_14" linenumber="175"/>
      <descriptor>
        <parameterTypes typeDescriptor="D"/>
        <resultType typeDescriptor="D"/>
      </descriptor>
      <localVariableTable name="radius" startInstruction="//@classes.0/@methods.10/@instructions.0" endInstruction="//@classes.0/@methods.10/@instructions.14" index="0">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
    </methods>
    <methods name="surfaceAreaCone" public="true" firstInstruction="//@classes.0/@methods.11/@instructions.0" static="true">
      <instructions xsi:type="jbc:DloadInstruction" name="idx_0" linenumber="186" localVariable="//@classes.0/@methods.11/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_1" linenumber="186">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.2"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_2" linenumber="186">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.3"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_3" linenumber="186">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.11/@instructions.9" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.11/@instructions.4"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_4" linenumber="187">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.5"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_5" linenumber="187">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.6"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_6" linenumber="187" constant="Must be a positive radius">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.7"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_7" linenumber="187">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.8"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_8" linenumber="187">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.11/@instructions.9"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_9" linenumber="189" localVariable="//@classes.0/@methods.11/@localVariableTable.1" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.10"/>
      </instructions>
      <instructions xsi:type="jbc:Dconst_0Instruction" name="idx_10" linenumber="189">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.11"/>
      </instructions>
      <instructions xsi:type="jbc:DcmpgInstruction" name="idx_11" linenumber="189">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.12"/>
      </instructions>
      <instructions xsi:type="jbc:IfgtInstruction" name="idx_12" linenumber="189">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.11/@instructions.18" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.11/@instructions.13"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_13" linenumber="190">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.14"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_14" linenumber="190">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.15"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_15" linenumber="190" constant="Must be a positive height">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.16"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_16" linenumber="190">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.17"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_17" linenumber="190">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.11/@instructions.18"/>
      </instructions>
      <instructions xsi:type="jbc:LdcDoubleInstruction" name="idx_18" linenumber="192" constant="3.141592653589793">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.19"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_19" linenumber="192" localVariable="//@classes.0/@methods.11/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.20"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_20" linenumber="192">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.21"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_21" linenumber="192" localVariable="//@classes.0/@methods.11/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.22"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_22" linenumber="192" localVariable="//@classes.0/@methods.11/@localVariableTable.1" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.23"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_23" linenumber="192" localVariable="//@classes.0/@methods.11/@localVariableTable.1" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.24"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_24" linenumber="192">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.25"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_25" linenumber="192" localVariable="//@classes.0/@methods.11/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.26"/>
      </instructions>
      <instructions xsi:type="jbc:DloadInstruction" name="idx_26" linenumber="192" localVariable="//@classes.0/@methods.11/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.27"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_27" linenumber="192">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.28"/>
      </instructions>
      <instructions xsi:type="jbc:DaddInstruction" name="idx_28" linenumber="192">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.29"/>
      </instructions>
      <instructions xsi:type="jbc:LdcDoubleInstruction" name="idx_29" linenumber="192" constant="0.5">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.30"/>
      </instructions>
      <instructions xsi:type="jbc:InvokestaticInstruction" name="idx_30" linenumber="192">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.31"/>
        <methodReference name="pow">
          <declaringClass typeDescriptor="Ljava/lang/Math;"/>
          <descriptor>
            <parameterTypes typeDescriptor="D"/>
            <parameterTypes typeDescriptor="D"/>
            <resultType typeDescriptor="D"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:DaddInstruction" name="idx_31" linenumber="192">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.32"/>
      </instructions>
      <instructions xsi:type="jbc:DmulInstruction" name="idx_32" linenumber="192">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.11/@instructions.33"/>
      </instructions>
      <instructions xsi:type="jbc:DreturnInstruction" name="idx_33" linenumber="192"/>
      <descriptor>
        <parameterTypes typeDescriptor="D"/>
        <parameterTypes typeDescriptor="D"/>
        <resultType typeDescriptor="D"/>
      </descriptor>
      <localVariableTable name="radius" startInstruction="//@classes.0/@methods.11/@instructions.0" endInstruction="//@classes.0/@methods.11/@instructions.33" index="0">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
      <localVariableTable name="height" startInstruction="//@classes.0/@methods.11/@instructions.0" endInstruction="//@classes.0/@methods.11/@instructions.33" index="2">
        <descriptor typeDescriptor="D"/>
      </localVariableTable>
    </methods>
    <fields name="POSITIVE_RADIUS" private="true" static="true" final="true">
      <constantValue xsi:type="jbc:StringValue" value="Must be a positive radius"/>
      <descriptor typeDescriptor="Ljava/lang/String;"/>
    </fields>
    <fields name="POSITIVE_HEIGHT" private="true" static="true" final="true">
      <constantValue xsi:type="jbc:StringValue" value="Must be a positive height"/>
      <descriptor typeDescriptor="Ljava/lang/String;"/>
    </fields>
    <fields name="POSITIVE_BASE" private="true" static="true" final="true">
      <constantValue xsi:type="jbc:StringValue" value="Must be a positive base"/>
      <descriptor typeDescriptor="Ljava/lang/String;"/>
    </fields>
    <superClass typeDescriptor="Ljava/lang/Object;"/>
  </classes>
</jbc:Project>
