<?xml version="1.0" encoding="ASCII"?>
<jbc:Project xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jbc="https://modbeam.bitbucket.io/jbc">
  <classes name="com/thealgorithms/maths/code/CollatzConjecture" public="true" minorVersion="0" majorVersion="63" super="true" sourceFileName="CollatzConjecture.java">
    <methods name="&lt;init>" public="true" firstInstruction="//@classes.0/@methods.0/@instructions.0">
      <instructions xsi:type="jbc:AloadInstruction" name="idx_0" linenumber="9" localVariable="//@classes.0/@methods.0/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.0/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_1" linenumber="9">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.0/@instructions.2"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/Object;"/>
          <descriptor>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:ReturnInstruction" name="idx_2" linenumber="9"/>
      <descriptor>
        <resultType typeDescriptor="V"/>
      </descriptor>
      <localVariableTable name="this" startInstruction="//@classes.0/@methods.0/@instructions.0" endInstruction="//@classes.0/@methods.0/@instructions.2" index="0">
        <descriptor typeDescriptor="Lcom/thealgorithms/maths/code/CollatzConjecture;"/>
      </localVariableTable>
    </methods>
    <methods name="nextNumber" public="true" firstInstruction="//@classes.0/@methods.1/@instructions.0">
      <instructions xsi:type="jbc:IloadInstruction" name="idx_0" linenumber="18" localVariable="//@classes.0/@methods.1/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:Iconst_2Instruction" name="idx_1" linenumber="18">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.2"/>
      </instructions>
      <instructions xsi:type="jbc:IremInstruction" name="idx_2" linenumber="18">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.3"/>
      </instructions>
      <instructions xsi:type="jbc:IfneInstruction" name="idx_3" linenumber="18">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.1/@instructions.8" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.1/@instructions.4"/>
      </instructions>
      <instructions xsi:type="jbc:IloadInstruction" name="idx_4" linenumber="19" localVariable="//@classes.0/@methods.1/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.5"/>
      </instructions>
      <instructions xsi:type="jbc:Iconst_2Instruction" name="idx_5" linenumber="19">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.6"/>
      </instructions>
      <instructions xsi:type="jbc:IdivInstruction" name="idx_6" linenumber="19">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.7"/>
      </instructions>
      <instructions xsi:type="jbc:IreturnInstruction" name="idx_7" linenumber="19">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.1/@instructions.8"/>
      </instructions>
      <instructions xsi:type="jbc:Iconst_3Instruction" name="idx_8" linenumber="21">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.9"/>
      </instructions>
      <instructions xsi:type="jbc:IloadInstruction" name="idx_9" linenumber="21" localVariable="//@classes.0/@methods.1/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.10"/>
      </instructions>
      <instructions xsi:type="jbc:ImulInstruction" name="idx_10" linenumber="21">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.11"/>
      </instructions>
      <instructions xsi:type="jbc:Iconst_1Instruction" name="idx_11" linenumber="21">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.12"/>
      </instructions>
      <instructions xsi:type="jbc:IaddInstruction" name="idx_12" linenumber="21">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.13"/>
      </instructions>
      <instructions xsi:type="jbc:IreturnInstruction" name="idx_13" linenumber="21"/>
      <descriptor>
        <parameterTypes typeDescriptor="I"/>
        <resultType typeDescriptor="I"/>
      </descriptor>
      <localVariableTable name="this" startInstruction="//@classes.0/@methods.1/@instructions.0" endInstruction="//@classes.0/@methods.1/@instructions.13" index="0">
        <descriptor typeDescriptor="Lcom/thealgorithms/maths/code/CollatzConjecture;"/>
      </localVariableTable>
      <localVariableTable name="n" startInstruction="//@classes.0/@methods.1/@instructions.0" endInstruction="//@classes.0/@methods.1/@instructions.13" index="1">
        <descriptor typeDescriptor="I"/>
      </localVariableTable>
    </methods>
    <methods name="collatzConjecture" public="true" firstInstruction="//@classes.0/@methods.2/@instructions.0">
      <instructions xsi:type="jbc:IloadInstruction" name="idx_0" linenumber="32" localVariable="//@classes.0/@methods.2/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:Iconst_1Instruction" name="idx_1" linenumber="32">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.2"/>
      </instructions>
      <instructions xsi:type="jbc:If_icmpgeInstruction" name="idx_2" linenumber="32">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.2/@instructions.8" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.2/@instructions.3"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_3" linenumber="33">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.4"/>
        <typeReference typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_4" linenumber="33">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.5"/>
      </instructions>
      <instructions xsi:type="jbc:LdcStringInstruction" name="idx_5" linenumber="33" constant="Must be a natural number">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.6"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_6" linenumber="33">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.7"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/IllegalArgumentException;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/String;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AthrowInstruction" name="idx_7" linenumber="33">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.2/@instructions.8"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_8" linenumber="35">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.9"/>
        <typeReference typeDescriptor="Ljava/util/ArrayList;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_9" linenumber="35">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.10"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_10" linenumber="35">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.11"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/util/ArrayList;"/>
          <descriptor>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AstoreInstruction" name="idx_11" linenumber="35" localVariable="//@classes.0/@methods.2/@localVariableTable.2" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.12"/>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_12" linenumber="36" localVariable="//@classes.0/@methods.2/@localVariableTable.2" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.13"/>
      </instructions>
      <instructions xsi:type="jbc:IloadInstruction" name="idx_13" linenumber="36" localVariable="//@classes.0/@methods.2/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.14"/>
      </instructions>
      <instructions xsi:type="jbc:InvokestaticInstruction" name="idx_14" linenumber="36">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.15"/>
        <methodReference name="valueOf">
          <declaringClass typeDescriptor="Ljava/lang/Integer;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <resultType typeDescriptor="Ljava/lang/Integer;"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_15" linenumber="36">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.16"/>
        <methodReference name="add">
          <declaringClass typeDescriptor="Ljava/util/ArrayList;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/Object;"/>
            <resultType typeDescriptor="Z"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:PopInstruction" name="idx_16" linenumber="36">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.17"/>
      </instructions>
      <instructions xsi:type="jbc:GotoInstruction" name="idx_17" linenumber="37">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.29"/>
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.2/@instructions.18"/>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_18" linenumber="38" localVariable="//@classes.0/@methods.2/@localVariableTable.2" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.19"/>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_19" linenumber="38" localVariable="//@classes.0/@methods.2/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.20"/>
      </instructions>
      <instructions xsi:type="jbc:IloadInstruction" name="idx_20" linenumber="38" localVariable="//@classes.0/@methods.2/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.21"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_21" linenumber="38">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.22"/>
        <methodReference name="nextNumber">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/CollatzConjecture;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:InvokestaticInstruction" name="idx_22" linenumber="38">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.23"/>
        <methodReference name="valueOf">
          <declaringClass typeDescriptor="Ljava/lang/Integer;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <resultType typeDescriptor="Ljava/lang/Integer;"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_23" linenumber="38">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.24"/>
        <methodReference name="add">
          <declaringClass typeDescriptor="Ljava/util/ArrayList;"/>
          <descriptor>
            <parameterTypes typeDescriptor="Ljava/lang/Object;"/>
            <resultType typeDescriptor="Z"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:PopInstruction" name="idx_24" linenumber="38">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.25"/>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_25" linenumber="39" localVariable="//@classes.0/@methods.2/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.26"/>
      </instructions>
      <instructions xsi:type="jbc:IloadInstruction" name="idx_26" linenumber="39" localVariable="//@classes.0/@methods.2/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.27"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_27" linenumber="39">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.28"/>
        <methodReference name="nextNumber">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/CollatzConjecture;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:IstoreInstruction" name="idx_28" linenumber="39" localVariable="//@classes.0/@methods.2/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.29"/>
      </instructions>
      <instructions xsi:type="jbc:IloadInstruction" name="idx_29" linenumber="37" localVariable="//@classes.0/@methods.2/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.30"/>
      </instructions>
      <instructions xsi:type="jbc:Iconst_1Instruction" name="idx_30" linenumber="37">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.31"/>
      </instructions>
      <instructions xsi:type="jbc:If_icmpneInstruction" name="idx_31" linenumber="37">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.2/@instructions.18" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.2/@instructions.32"/>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_32" linenumber="41" localVariable="//@classes.0/@methods.2/@localVariableTable.2" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.33"/>
      </instructions>
      <instructions xsi:type="jbc:AreturnInstruction" name="idx_33" linenumber="41"/>
      <descriptor>
        <parameterTypes typeDescriptor="I"/>
        <resultType typeDescriptor="Ljava/util/List;"/>
      </descriptor>
      <signature>
        <typeSignature xsi:type="jbc:Basetype" type="INTEGER"/>
        <returnType xsi:type="jbc:ClassTypeSignature" packagespecifier="java/util/">
          <simpleClassSignature identifier="List">
            <typeArgument xsi:type="jbc:TypeConcrete">
              <fieldTypeSignature xsi:type="jbc:ClassTypeSignature" packagespecifier="java/lang/">
                <simpleClassSignature identifier="Integer"/>
              </fieldTypeSignature>
            </typeArgument>
          </simpleClassSignature>
        </returnType>
      </signature>
      <localVariableTable name="this" startInstruction="//@classes.0/@methods.2/@instructions.0" endInstruction="//@classes.0/@methods.2/@instructions.33" index="0">
        <descriptor typeDescriptor="Lcom/thealgorithms/maths/code/CollatzConjecture;"/>
      </localVariableTable>
      <localVariableTable name="firstNumber" startInstruction="//@classes.0/@methods.2/@instructions.0" endInstruction="//@classes.0/@methods.2/@instructions.33" index="1">
        <descriptor typeDescriptor="I"/>
      </localVariableTable>
      <localVariableTable name="result" startInstruction="//@classes.0/@methods.2/@instructions.12" endInstruction="//@classes.0/@methods.2/@instructions.33" index="2">
        <signature xsi:type="jbc:ClassTypeSignature" packagespecifier="java/util/">
          <simpleClassSignature identifier="ArrayList">
            <typeArgument xsi:type="jbc:TypeConcrete">
              <fieldTypeSignature xsi:type="jbc:ClassTypeSignature" packagespecifier="java/lang/">
                <simpleClassSignature identifier="Integer"/>
              </fieldTypeSignature>
            </typeArgument>
          </simpleClassSignature>
        </signature>
        <descriptor typeDescriptor="Ljava/util/ArrayList;"/>
      </localVariableTable>
    </methods>
    <superClass typeDescriptor="Ljava/lang/Object;"/>
  </classes>
</jbc:Project>
