<?xml version="1.0" encoding="ASCII"?>
<jbc:Project xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jbc="https://modbeam.bitbucket.io/jbc">
  <classes name="com/thealgorithms/maths/code/LinearDiophantineEquationsSolver" public="true" minorVersion="0" majorVersion="63" final="true" super="true" sourceFileName="LinearDiophantineEquationsSolver.java">
    <methods name="&lt;init>" public="true" firstInstruction="//@classes.0/@methods.0/@instructions.0">
      <instructions xsi:type="jbc:AloadInstruction" name="idx_0" linenumber="5" localVariable="//@classes.0/@methods.0/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.0/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_1" linenumber="5">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.0/@instructions.2"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Ljava/lang/Object;"/>
          <descriptor>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:ReturnInstruction" name="idx_2" linenumber="5"/>
      <descriptor>
        <resultType typeDescriptor="V"/>
      </descriptor>
      <localVariableTable name="this" startInstruction="//@classes.0/@methods.0/@instructions.0" endInstruction="//@classes.0/@methods.0/@instructions.2" index="0">
        <descriptor typeDescriptor="Lcom/thealgorithms/maths/code/LinearDiophantineEquationsSolver;"/>
      </localVariableTable>
    </methods>
    <methods name="findAnySolution" public="true" firstInstruction="//@classes.0/@methods.1/@instructions.0" static="true">
      <instructions xsi:type="jbc:AloadInstruction" name="idx_0" linenumber="9" localVariable="//@classes.0/@methods.1/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_1" linenumber="9">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.2"/>
        <methodReference name="a">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Equation;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:IfneInstruction" name="idx_2" linenumber="9">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.1/@instructions.11" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.1/@instructions.3"/>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_3" linenumber="9" localVariable="//@classes.0/@methods.1/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.4"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_4" linenumber="9">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.5"/>
        <methodReference name="b">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Equation;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:IfneInstruction" name="idx_5" linenumber="9">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.1/@instructions.11" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.1/@instructions.6"/>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_6" linenumber="9" localVariable="//@classes.0/@methods.1/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.7"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_7" linenumber="9">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.8"/>
        <methodReference name="c">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Equation;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:IfneInstruction" name="idx_8" linenumber="9">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.1/@instructions.11" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.1/@instructions.9"/>
      </instructions>
      <instructions xsi:type="jbc:GetstaticInstruction" name="idx_9" linenumber="10">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.10"/>
        <fieldReference name="INFINITE_SOLUTIONS">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          <descriptor typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
        </fieldReference>
      </instructions>
      <instructions xsi:type="jbc:AreturnInstruction" name="idx_10" linenumber="10">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.1/@instructions.11"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_11" linenumber="12">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.12"/>
        <typeReference typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_12" linenumber="12">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.13"/>
      </instructions>
      <instructions xsi:type="jbc:Iconst_0Instruction" name="idx_13" linenumber="12">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.14"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_14" linenumber="12">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.15"/>
        <typeReference typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_15" linenumber="12">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.16"/>
      </instructions>
      <instructions xsi:type="jbc:Iconst_0Instruction" name="idx_16" linenumber="12">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.17"/>
      </instructions>
      <instructions xsi:type="jbc:Iconst_0Instruction" name="idx_17" linenumber="12">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.18"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_18" linenumber="12">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.19"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <parameterTypes typeDescriptor="I"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_19" linenumber="12">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.20"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <parameterTypes typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AstoreInstruction" name="idx_20" linenumber="12" localVariable="//@classes.0/@methods.1/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.21"/>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_21" linenumber="13" localVariable="//@classes.0/@methods.1/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.22"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_22" linenumber="13">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.23"/>
        <methodReference name="a">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Equation;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_23" linenumber="13" localVariable="//@classes.0/@methods.1/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.24"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_24" linenumber="13">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.25"/>
        <methodReference name="b">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Equation;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_25" linenumber="13" localVariable="//@classes.0/@methods.1/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.26"/>
      </instructions>
      <instructions xsi:type="jbc:InvokestaticInstruction" name="idx_26" linenumber="13">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.27"/>
        <methodReference name="gcd">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/LinearDiophantineEquationsSolver;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <parameterTypes typeDescriptor="I"/>
            <parameterTypes typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
            <resultType typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AstoreInstruction" name="idx_27" linenumber="13" localVariable="//@classes.0/@methods.1/@localVariableTable.2" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.28"/>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_28" linenumber="14" localVariable="//@classes.0/@methods.1/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.29"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_29" linenumber="14">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.30"/>
        <methodReference name="c">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Equation;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_30" linenumber="14" localVariable="//@classes.0/@methods.1/@localVariableTable.2" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.31"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_31" linenumber="14">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.32"/>
        <methodReference name="getGcd">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:IremInstruction" name="idx_32" linenumber="14">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.33"/>
      </instructions>
      <instructions xsi:type="jbc:IfeqInstruction" name="idx_33" linenumber="14">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.1/@instructions.36" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.1/@instructions.34"/>
      </instructions>
      <instructions xsi:type="jbc:GetstaticInstruction" name="idx_34" linenumber="15">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.35"/>
        <fieldReference name="NO_SOLUTION">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          <descriptor typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
        </fieldReference>
      </instructions>
      <instructions xsi:type="jbc:AreturnInstruction" name="idx_35" linenumber="15">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.1/@instructions.36"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_36" linenumber="18">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.37"/>
        <typeReference typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_37" linenumber="18">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.38"/>
      </instructions>
      <instructions xsi:type="jbc:Iconst_0Instruction" name="idx_38" linenumber="18">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.39"/>
      </instructions>
      <instructions xsi:type="jbc:Iconst_0Instruction" name="idx_39" linenumber="18">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.40"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_40" linenumber="18">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.41"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <parameterTypes typeDescriptor="I"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AstoreInstruction" name="idx_41" linenumber="18" localVariable="//@classes.0/@methods.1/@localVariableTable.3" varIndex="3">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.42"/>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_42" linenumber="19" localVariable="//@classes.0/@methods.1/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.43"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_43" linenumber="19">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.44"/>
        <methodReference name="getSolution">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <resultType typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_44" linenumber="19">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.45"/>
        <methodReference name="getX">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_45" linenumber="19" localVariable="//@classes.0/@methods.1/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.46"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_46" linenumber="19">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.47"/>
        <methodReference name="c">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Equation;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_47" linenumber="19" localVariable="//@classes.0/@methods.1/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.48"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_48" linenumber="19">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.49"/>
        <methodReference name="getGcd">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:IdivInstruction" name="idx_49" linenumber="19">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.50"/>
      </instructions>
      <instructions xsi:type="jbc:ImulInstruction" name="idx_50" linenumber="19">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.51"/>
      </instructions>
      <instructions xsi:type="jbc:IstoreInstruction" name="idx_51" linenumber="19" localVariable="//@classes.0/@methods.1/@localVariableTable.4" varIndex="4">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.52"/>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_52" linenumber="20" localVariable="//@classes.0/@methods.1/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.53"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_53" linenumber="20">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.54"/>
        <methodReference name="getSolution">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <resultType typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_54" linenumber="20">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.55"/>
        <methodReference name="getY">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_55" linenumber="20" localVariable="//@classes.0/@methods.1/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.56"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_56" linenumber="20">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.57"/>
        <methodReference name="c">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Equation;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_57" linenumber="20" localVariable="//@classes.0/@methods.1/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.58"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_58" linenumber="20">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.59"/>
        <methodReference name="getGcd">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:IdivInstruction" name="idx_59" linenumber="20">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.60"/>
      </instructions>
      <instructions xsi:type="jbc:ImulInstruction" name="idx_60" linenumber="20">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.61"/>
      </instructions>
      <instructions xsi:type="jbc:IstoreInstruction" name="idx_61" linenumber="20" localVariable="//@classes.0/@methods.1/@localVariableTable.5" varIndex="5">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.62"/>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_62" linenumber="21" localVariable="//@classes.0/@methods.1/@localVariableTable.3" varIndex="3">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.63"/>
      </instructions>
      <instructions xsi:type="jbc:IloadInstruction" name="idx_63" linenumber="21" localVariable="//@classes.0/@methods.1/@localVariableTable.4" varIndex="4">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.64"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_64" linenumber="21">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.65"/>
        <methodReference name="setX">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_65" linenumber="22" localVariable="//@classes.0/@methods.1/@localVariableTable.3" varIndex="3">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.66"/>
      </instructions>
      <instructions xsi:type="jbc:IloadInstruction" name="idx_66" linenumber="22" localVariable="//@classes.0/@methods.1/@localVariableTable.5" varIndex="5">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.67"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_67" linenumber="22">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.68"/>
        <methodReference name="setY">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_68" linenumber="23" localVariable="//@classes.0/@methods.1/@localVariableTable.3" varIndex="3">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.1/@instructions.69"/>
      </instructions>
      <instructions xsi:type="jbc:AreturnInstruction" name="idx_69" linenumber="23"/>
      <descriptor>
        <parameterTypes typeDescriptor="Lcom/thealgorithms/maths/code/Equation;"/>
        <resultType typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
      </descriptor>
      <localVariableTable name="equation" startInstruction="//@classes.0/@methods.1/@instructions.0" endInstruction="//@classes.0/@methods.1/@instructions.69" index="0">
        <descriptor typeDescriptor="Lcom/thealgorithms/maths/code/Equation;"/>
      </localVariableTable>
      <localVariableTable name="stub" startInstruction="//@classes.0/@methods.1/@instructions.21" endInstruction="//@classes.0/@methods.1/@instructions.69" index="1">
        <descriptor typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
      </localVariableTable>
      <localVariableTable name="gcdSolution" startInstruction="//@classes.0/@methods.1/@instructions.28" endInstruction="//@classes.0/@methods.1/@instructions.69" index="2">
        <descriptor typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
      </localVariableTable>
      <localVariableTable name="toReturn" startInstruction="//@classes.0/@methods.1/@instructions.42" endInstruction="//@classes.0/@methods.1/@instructions.69" index="3">
        <descriptor typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
      </localVariableTable>
      <localVariableTable name="xToSet" startInstruction="//@classes.0/@methods.1/@instructions.52" endInstruction="//@classes.0/@methods.1/@instructions.69" index="4">
        <descriptor typeDescriptor="I"/>
      </localVariableTable>
      <localVariableTable name="yToSet" startInstruction="//@classes.0/@methods.1/@instructions.62" endInstruction="//@classes.0/@methods.1/@instructions.69" index="5">
        <descriptor typeDescriptor="I"/>
      </localVariableTable>
    </methods>
    <methods name="gcd" private="true" firstInstruction="//@classes.0/@methods.2/@instructions.0" static="true">
      <instructions xsi:type="jbc:IloadInstruction" name="idx_0" linenumber="29" localVariable="//@classes.0/@methods.2/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.1"/>
      </instructions>
      <instructions xsi:type="jbc:IfneInstruction" name="idx_1" linenumber="29">
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.2/@instructions.12" condition="true"/>
        <outEdges xsi:type="jbc:ConditionalEdge" end="//@classes.0/@methods.2/@instructions.2"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_2" linenumber="30">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.3"/>
        <typeReference typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_3" linenumber="30">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.4"/>
      </instructions>
      <instructions xsi:type="jbc:IloadInstruction" name="idx_4" linenumber="30" localVariable="//@classes.0/@methods.2/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.5"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_5" linenumber="30">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.6"/>
        <typeReference typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_6" linenumber="30">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.7"/>
      </instructions>
      <instructions xsi:type="jbc:Iconst_1Instruction" name="idx_7" linenumber="30">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.8"/>
      </instructions>
      <instructions xsi:type="jbc:Iconst_0Instruction" name="idx_8" linenumber="30">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.9"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_9" linenumber="30">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.10"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <parameterTypes typeDescriptor="I"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_10" linenumber="30">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.11"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <parameterTypes typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AreturnInstruction" name="idx_11" linenumber="30">
        <outEdges xsi:type="jbc:ResumeEdge" end="//@classes.0/@methods.2/@instructions.12"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_12" linenumber="33">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.13"/>
        <typeReference typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_13" linenumber="33">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.14"/>
      </instructions>
      <instructions xsi:type="jbc:Iconst_0Instruction" name="idx_14" linenumber="33">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.15"/>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_15" linenumber="33">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.16"/>
        <typeReference typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_16" linenumber="33">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.17"/>
      </instructions>
      <instructions xsi:type="jbc:Iconst_0Instruction" name="idx_17" linenumber="33">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.18"/>
      </instructions>
      <instructions xsi:type="jbc:Iconst_0Instruction" name="idx_18" linenumber="33">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.19"/>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_19" linenumber="33">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.20"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <parameterTypes typeDescriptor="I"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_20" linenumber="33">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.21"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <parameterTypes typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AstoreInstruction" name="idx_21" linenumber="33" localVariable="//@classes.0/@methods.2/@localVariableTable.3" varIndex="3">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.22"/>
      </instructions>
      <instructions xsi:type="jbc:IloadInstruction" name="idx_22" linenumber="34" localVariable="//@classes.0/@methods.2/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.23"/>
      </instructions>
      <instructions xsi:type="jbc:IloadInstruction" name="idx_23" linenumber="34" localVariable="//@classes.0/@methods.2/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.24"/>
      </instructions>
      <instructions xsi:type="jbc:IloadInstruction" name="idx_24" linenumber="34" localVariable="//@classes.0/@methods.2/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.25"/>
      </instructions>
      <instructions xsi:type="jbc:IremInstruction" name="idx_25" linenumber="34">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.26"/>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_26" linenumber="34" localVariable="//@classes.0/@methods.2/@localVariableTable.3" varIndex="3">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.27"/>
      </instructions>
      <instructions xsi:type="jbc:InvokestaticInstruction" name="idx_27" linenumber="34">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.28"/>
        <methodReference name="gcd">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/LinearDiophantineEquationsSolver;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <parameterTypes typeDescriptor="I"/>
            <parameterTypes typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
            <resultType typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AstoreInstruction" name="idx_28" linenumber="34" localVariable="//@classes.0/@methods.2/@localVariableTable.4" varIndex="4">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.29"/>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_29" linenumber="35" localVariable="//@classes.0/@methods.2/@localVariableTable.2" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.30"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_30" linenumber="35">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.31"/>
        <methodReference name="getSolution">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <resultType typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_31" linenumber="35" localVariable="//@classes.0/@methods.2/@localVariableTable.4" varIndex="4">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.32"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_32" linenumber="35">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.33"/>
        <methodReference name="getSolution">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <resultType typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_33" linenumber="35">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.34"/>
        <methodReference name="getY">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_34" linenumber="35">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.35"/>
        <methodReference name="setX">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_35" linenumber="36" localVariable="//@classes.0/@methods.2/@localVariableTable.2" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.36"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_36" linenumber="36">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.37"/>
        <methodReference name="getSolution">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <resultType typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_37" linenumber="36" localVariable="//@classes.0/@methods.2/@localVariableTable.4" varIndex="4">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.38"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_38" linenumber="36">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.39"/>
        <methodReference name="getSolution">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <resultType typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_39" linenumber="36">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.40"/>
        <methodReference name="getX">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:IloadInstruction" name="idx_40" linenumber="36" localVariable="//@classes.0/@methods.2/@localVariableTable.0" varIndex="0">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.41"/>
      </instructions>
      <instructions xsi:type="jbc:IloadInstruction" name="idx_41" linenumber="36" localVariable="//@classes.0/@methods.2/@localVariableTable.1" varIndex="1">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.42"/>
      </instructions>
      <instructions xsi:type="jbc:IdivInstruction" name="idx_42" linenumber="36">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.43"/>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_43" linenumber="36" localVariable="//@classes.0/@methods.2/@localVariableTable.4" varIndex="4">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.44"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_44" linenumber="36">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.45"/>
        <methodReference name="getSolution">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <resultType typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_45" linenumber="36">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.46"/>
        <methodReference name="getY">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:ImulInstruction" name="idx_46" linenumber="36">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.47"/>
      </instructions>
      <instructions xsi:type="jbc:IsubInstruction" name="idx_47" linenumber="36">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.48"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_48" linenumber="36">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.49"/>
        <methodReference name="setY">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_49" linenumber="37" localVariable="//@classes.0/@methods.2/@localVariableTable.2" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.50"/>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_50" linenumber="37" localVariable="//@classes.0/@methods.2/@localVariableTable.4" varIndex="4">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.51"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_51" linenumber="37">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.52"/>
        <methodReference name="getGcd">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_52" linenumber="37">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.53"/>
        <methodReference name="setGcd">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:NewInstruction" name="idx_53" linenumber="38">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.54"/>
        <typeReference typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
      </instructions>
      <instructions xsi:type="jbc:DupInstruction" name="idx_54" linenumber="38">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.55"/>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_55" linenumber="38" localVariable="//@classes.0/@methods.2/@localVariableTable.4" varIndex="4">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.56"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_56" linenumber="38">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.57"/>
        <methodReference name="getGcd">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <resultType typeDescriptor="I"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AloadInstruction" name="idx_57" linenumber="38" localVariable="//@classes.0/@methods.2/@localVariableTable.2" varIndex="2">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.58"/>
      </instructions>
      <instructions xsi:type="jbc:InvokevirtualInstruction" name="idx_58" linenumber="38">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.59"/>
        <methodReference name="getSolution">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <resultType typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:InvokespecialInstruction" name="idx_59" linenumber="38">
        <outEdges xsi:type="jbc:UnconditionalEdge" end="//@classes.0/@methods.2/@instructions.60"/>
        <methodReference name="&lt;init>">
          <declaringClass typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
          <descriptor>
            <parameterTypes typeDescriptor="I"/>
            <parameterTypes typeDescriptor="Lcom/thealgorithms/maths/code/Solution;"/>
            <resultType typeDescriptor="V"/>
          </descriptor>
        </methodReference>
      </instructions>
      <instructions xsi:type="jbc:AreturnInstruction" name="idx_60" linenumber="38"/>
      <descriptor>
        <parameterTypes typeDescriptor="I"/>
        <parameterTypes typeDescriptor="I"/>
        <parameterTypes typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
        <resultType typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
      </descriptor>
      <localVariableTable name="a" startInstruction="//@classes.0/@methods.2/@instructions.0" endInstruction="//@classes.0/@methods.2/@instructions.60" index="0">
        <descriptor typeDescriptor="I"/>
      </localVariableTable>
      <localVariableTable name="b" startInstruction="//@classes.0/@methods.2/@instructions.0" endInstruction="//@classes.0/@methods.2/@instructions.60" index="1">
        <descriptor typeDescriptor="I"/>
      </localVariableTable>
      <localVariableTable name="previous" startInstruction="//@classes.0/@methods.2/@instructions.0" endInstruction="//@classes.0/@methods.2/@instructions.60" index="2">
        <descriptor typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
      </localVariableTable>
      <localVariableTable name="stubWrapper" startInstruction="//@classes.0/@methods.2/@instructions.22" endInstruction="//@classes.0/@methods.2/@instructions.60" index="3">
        <descriptor typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
      </localVariableTable>
      <localVariableTable name="next" startInstruction="//@classes.0/@methods.2/@instructions.29" endInstruction="//@classes.0/@methods.2/@instructions.60" index="4">
        <descriptor typeDescriptor="Lcom/thealgorithms/maths/code/GcdSolutionWrapper;"/>
      </localVariableTable>
    </methods>
    <superClass typeDescriptor="Ljava/lang/Object;"/>
  </classes>
</jbc:Project>
